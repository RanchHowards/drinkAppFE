{"version":3,"sources":["queries.js","components/BigButton.js","components/Event.js","components/Events.js","components/Notification.js","components/Filter.js","components/Navbar.js","cache.js","components/CreateEvent.js","components/Landing.js","components/Profile.js","components/Register.js","components/MyEvent.js","components/MyEvents.js","components/EditEvent.js","components/Comments.js","components/EventShow.js","components/Attendees.js","components/Host.js","components/NoMatch.js","components/PrivateRoute.js","filter.js","App.js","index.js"],"names":["EVENT_FIELDS","gql","NESTED_EVENT_FIELDS","ALL_EVENTS","ADD_EVENT","EDIT_EVENT","JOIN_EVENT","LEAVE_EVENT","FIND_EVENT","DELETE_EVENT","CREATE_USER","LOGIN","USER_INFO","IS_LOGGED_IN","CREATE_COMMENT","BigButton","event","setNotify","data","useQuery","userInfo","useMutation","update","store","response","updatedEvent","joinEvent","dataInStore","readQuery","query","writeQuery","allEvents","filter","e","id","err","Error","message","leaveEvent","loading","error","user","me","going","attendees","every","person","isLoggedIn","host","to","className","max","length","parseInt","maxGuests","onClick","variables","userId","eventId","title","disabled","Event","date","Date","eventDate","style","fontSize","src","pic","alt","eventPic","eventType","location","toLocaleDateString","textAlign","toLocaleTimeString","slice","Events","events","token","map","Notification","notification","type","Filter","setType","setPeriod","period","drinksArr","drinks","setDrinks","buttonClass","dateClass","drinksClass","checkBoxClass","d","getFullYear","getMonth","getDate","useState","button","setButton","handleType","value","includes","t","concat","buttonStyle","backgroundColor","color","target","week","checked","onChange","Navbar","login","signOut","sortName","setSortName","showForm","setShowForm","expand","setExpand","showFilter","setShowFilter","username","setUsername","password","setPassword","signIn","stopPropagation","handleSort","copy","push","shift","placeholder","cache","InMemoryCache","typePolicies","fields","merge","Query","read","isLoggedInVar","eventsArr","eventsArrVar","eventsArrFilter","eventsArrFilterVar","userData","userDataVar","typeDataVar","makeVar","localStorage","getItem","CreateEvent","addEvent","history","eventName","setEventName","setEventType","undefined","setEventPic","setLocation","description","setDescription","setEventDate","setMax","setMaxGuests","onSubmit","preventDefault","inputDate","newEvent","Math","random","name","display","justifyContent","min","alignSelf","Landing","flexDirection","alignItems","Profile","drink","Register","createUser","createResult","setPic","setDrink","useEffect","signUp","a","required","MyEvent","active","MyEvents","myEvents","EditEvent","useHistory","useParams","fetchPolicy","onCompleted","findEvent","onError","refetchQueries","editEvent","deleteEvent","evict","gc","handleDelete","Comments","comment","setComment","comments","createComment","c","author","EventShow","eventInfo","Attendees","showProfile","setShowProfile","Host","NoMatch","PrivateRoute","children","rest","render","sort","arr","exp","b","createdAt","App","client","useApolloClient","setToken","setNotification","timeoutId","setTimeoutId","clearTimeout","timer","setTimeout","setItem","refetch","console","log","loginResult","res","previousToken","clear","resetStore","reduce","acc","cur","eventsInfo","eventsCopy1","todaysDate","eventsCopy2","eventsCopy3","path","exact","httpLink","createHttpLink","uri","typeDefs","authLink","setContext","_","headers","authorization","ApolloClient","link","ReactDOM","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.4523b6c6.chunk.js","sourcesContent":["import { gql } from '@apollo/client'\n\n//fragment - not in use\nexport const USER_FIELDS = gql`\n  fragment UserFields on User {\n    username\n    pic\n    id\n  }\n`\nexport const EVENT_FIELDS = gql`\n  fragment EventFields on Event {\n    title\n    eventType\n    eventPic\n    location\n    description\n    max\n    maxGuests\n    eventDate\n    createdAt\n    id\n  }\n`\nexport const NESTED_EVENT_FIELDS = gql`\n  fragment NestedEventFields on Event {\n    title\n    eventType\n    eventPic\n    location\n    attendees {\n      username\n      pic\n      id\n      drink\n    }\n    host {\n      username\n      pic\n      id\n      drink\n    }\n    comments {\n      comment\n      author {\n        username\n        id\n        pic\n      }\n      id\n    }\n    description\n    max\n    maxGuests\n    eventDate\n    createdAt\n    id\n  }\n`\nexport const ALL_EVENTS = gql`\n  query {\n    allEvents {\n      ...NestedEventFields\n    }\n  }\n  ${NESTED_EVENT_FIELDS}\n`\nexport const ALL_USERS = gql`\n  query {\n    allUsers {\n      username\n    }\n  }\n`\n\nexport const ADD_EVENT = gql`\n  mutation addEvent(\n    $title: String!\n    $eventType: String\n    $eventPic: String\n    $location: String\n    $eventDate: Date\n    $description: String\n    $max: Boolean\n    $maxGuests: Int\n  ) {\n    addEvent(\n      title: $title\n      eventType: $eventType\n      eventPic: $eventPic\n      location: $location\n      eventDate: $eventDate\n      description: $description\n      max: $max\n      maxGuests: $maxGuests\n    ) {\n      ...EventFields\n    }\n  }\n  ${EVENT_FIELDS}\n`\nexport const EDIT_EVENT = gql`\n  mutation editEvent(\n    $title: String!\n    $eventType: String\n    $eventPic: String\n    $location: String\n    $eventDate: Date\n    $description: String\n    $max: Boolean\n    $maxGuests: Int\n    $eventId: ID!\n  ) {\n    editEvent(\n      title: $title\n      eventType: $eventType\n      eventPic: $eventPic\n      location: $location\n      eventDate: $eventDate\n      description: $description\n      max: $max\n      maxGuests: $maxGuests\n      eventId: $eventId\n    ) {\n      ...EventFields\n      id\n    }\n  }\n  ${EVENT_FIELDS}\n`\nexport const JOIN_EVENT = gql`\n  mutation joinEvent($userId: ID!, $eventId: ID!) {\n    joinEvent(userId: $userId, eventId: $eventId) {\n      title\n      attendees {\n        username\n        id\n      }\n      id\n    }\n  }\n`\nexport const LEAVE_EVENT = gql`\n  mutation leaveEvent($userId: ID!, $eventId: ID!) {\n    leaveEvent(userId: $userId, eventId: $eventId) {\n      title\n      attendees {\n        username\n        id\n      }\n      id\n    }\n  }\n`\nexport const FIND_EVENT = gql`\n  query findEvent($eventId: ID!) {\n    findEvent(eventId: $eventId) {\n      ...NestedEventFields\n    }\n  }\n  ${NESTED_EVENT_FIELDS}\n`\n\nexport const DELETE_EVENT = gql`\n  mutation deleteEvent($eventId: ID!) {\n    deleteEvent(eventId: $eventId) {\n      id\n    }\n  }\n`\nexport const CREATE_USER = gql`\n  mutation createUser(\n    $username: String!\n    $password: String!\n    $drink: String\n    $pic: String\n  ) {\n    createUser(\n      username: $username\n      password: $password\n      drink: $drink\n      pic: $pic\n    ) {\n      value\n      user {\n        username\n        pic\n        drink\n        id\n        myEvents {\n          ...EventFields\n        }\n      }\n    }\n  }\n  ${EVENT_FIELDS}\n`\n\nexport const LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      value\n      user {\n        username\n        id\n        drink\n        pic\n        myEvents {\n          ...EventFields\n          id\n        }\n      }\n    }\n  }\n  ${EVENT_FIELDS}\n`\nexport const USER_INFO = gql`\n  query {\n    me {\n      username\n      id\n      drink\n      pic\n      myEvents {\n        ...EventFields\n        id\n      }\n    }\n  }\n  ${EVENT_FIELDS}\n`\nexport const IS_LOGGED_IN = gql`\n  query IsUserLoggedIn {\n    isLoggedIn @client\n  }\n`\nexport const CREATE_COMMENT = gql`\n  mutation createComment($eventId: ID!, $comment: String!, $inResponseTo: ID) {\n    createComment(\n      eventId: $eventId\n      comment: $comment\n      inResponseTo: $inResponseTo\n    ) {\n      comment\n      id\n      author {\n        username\n        id\n        pic\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { useQuery, useMutation } from '@apollo/client'\nimport {\n  ALL_EVENTS,\n  IS_LOGGED_IN,\n  JOIN_EVENT,\n  LEAVE_EVENT,\n  USER_INFO,\n} from '../queries'\nimport { Link } from 'react-router-dom'\n\nconst BigButton = ({ event, setNotify }) => {\n  const { data } = useQuery(IS_LOGGED_IN)\n\n  const userInfo = useQuery(USER_INFO)\n\n  const [joinEvent] = useMutation(JOIN_EVENT, {\n    update: (store, response) => {\n      try {\n        const updatedEvent = response.data.joinEvent\n        const dataInStore = store.readQuery({ query: ALL_EVENTS })\n        store.writeQuery({\n          query: ALL_EVENTS,\n          data: {\n            ...dataInStore,\n            allEvents: dataInStore.allEvents.filter((e) =>\n              e.id !== updatedEvent.id ? e : updatedEvent\n            ),\n          },\n        })\n      } catch (err) {\n        throw new Error(err.message)\n      }\n    },\n  })\n  const [leaveEvent] = useMutation(LEAVE_EVENT, {\n    update: (store, response) => {\n      try {\n        const updatedEvent = response.data.leaveEvent\n        const dataInStore = store.readQuery({ query: ALL_EVENTS })\n        store.writeQuery({\n          query: ALL_EVENTS,\n          data: {\n            ...dataInStore,\n            allEvents: dataInStore.allEvents.filter((e) =>\n              e.id !== updatedEvent.id ? e : updatedEvent\n            ),\n          },\n        })\n      } catch (err) {\n        throw new Error(err.message)\n      }\n    },\n  })\n\n  if (userInfo.loading) return <div>LOADING</div>\n  else if (userInfo.error) return <div>{userInfo.error.message}</div>\n\n  const user = userInfo.data.me\n\n  const going = !event.attendees.every((person) => person?.id !== user?.id)\n\n  const joinEventClick = () => {\n    joinEvent({ variables: { userId: user.id, eventId: event.id } })\n    setNotify(`you're going to ${event.title}`, 'navbar-success')\n  }\n  const leaveEventClick = () => {\n    leaveEvent({ variables: { userId: user.id, eventId: event.id } })\n    setNotify(`you're NO LONGER going to ${event.title}`, 'navbar-error')\n  }\n\n  if (!data.isLoggedIn) {\n    return null\n  } else if (user?.id === event.host.id) {\n    return (\n      <Link to={`/editevent/${event.id}`}>\n        <button className=\"button edit-button\">Edit</button>\n      </Link>\n    )\n  } else if (!event.max || event.attendees.length < parseInt(event.maxGuests)) {\n    if (going) {\n      return (\n        <button onClick={leaveEventClick} className=\"button leave-button\">\n          LEAVE\n        </button>\n      )\n    }\n    return (\n      <button onClick={joinEventClick} className=\"button join-button\">\n        JOIN\n      </button>\n    )\n  }\n  return (\n    <button disabled className=\"button full-button\">\n      FULL\n    </button>\n  )\n}\n\nexport default BigButton\n","import React from 'react'\nimport BigButton from './BigButton'\nimport { Link } from 'react-router-dom'\n\nconst Event = ({ event, setNotify }) => {\n  const date = new Date(event.eventDate)\n\n  return (\n    <div>\n      <div className=\"event-info-top\">\n        <Link to={`/events/${event.id}`}>\n          <p style={{ fontSize: '60px' }}>{event.title}</p>\n        </Link>\n        <img src={event.host.pic} alt=\"host\" className=\"event-host-pic\"></img>\n      </div>\n      <img src={event.eventPic} alt=\"event\" className=\"event-pic\"></img>\n      <div className=\"event-info-bottom\">\n        <div>{event.eventType}</div>\n        <div>{event.location}</div>\n        <div>\n          <div>{date.toLocaleDateString()}</div>\n          <div style={{ textAlign: 'center' }}>\n            {date.toLocaleTimeString().slice(0, 5)}\n          </div>\n        </div>\n      </div>\n\n      <BigButton event={event} setNotify={setNotify} />\n    </div>\n  )\n}\n\nexport default Event\n","import React from 'react'\nimport Event from './Event'\n\nconst Events = ({ events, token, setNotify }) => {\n  // const [events, setEvents] = useState([])\n  // useEffect(() => {\n  //   setEvents([...eventsInfo])\n  // }, [eventsInfo])\n  // const copy = [...eventsInfo] //had to create a copy in order to get the SORT method to work\n  // let events = copy.sort(\n  //   (a, b) => new Date(b.eventDate) - new Date(a.eventDate)\n  // )\n\n  return (\n    <div>\n      <ul className=\"events-container\">\n        {events?.map((event) => {\n          return (\n            <li className=\"event\" key={event.id}>\n              <Event event={event} token={token} setNotify={setNotify} />\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n  )\n}\n\nexport default Events\n","import React from 'react'\n\nconst Notification = ({ notification }) => {\n  return (\n    <div className=\"navbar\">\n      <div className={notification.type}>{notification.message}</div>\n    </div>\n  )\n}\n\nexport default Notification\n","import React, { useState } from 'react'\n\nconst Filter = ({\n  type,\n  setType,\n  period,\n  setPeriod,\n  drinksArr,\n  drinks,\n  setDrinks,\n  buttonClass,\n  dateClass,\n  drinksClass,\n  checkBoxClass,\n}) => {\n  const d = new Date()\n  const date = new Date(d.getFullYear(), d.getMonth(), d.getDate() + 1)\n\n  // const type = useReactiveVar(typeDataVar)\n\n  // const e = useReactiveVar(eventsArrVar)\n\n  // useEffect(() => {\n  //   eventsArrFilterVar([...eventsArrVar()])\n  // }, [eventsArrVar()])\n  // //TYPE OF LOCATION FOR EVENT\n  // useEffect(() => {\n  //   console.log(e)\n  //   const eventsFilter = !type.length\n  //     ? e\n  //     : e.filter((event) => type.includes(event.eventType))\n  //   eventsArrFilterVar([...eventsFilter])\n  // }, [type]) //eslint-disable-line\n\n  const [button, setButton] = useState('all')\n\n  const today = () => {\n    setButton('today')\n    setPeriod(date)\n  }\n  const week = () => {\n    const week = new Date(d.getFullYear(), d.getMonth(), d.getDate() + 7)\n    setButton('week')\n    setPeriod(week)\n  }\n\n  const handleType = (value) => {\n    if (type.includes(value)) {\n      setType(type.filter((t) => t !== value))\n    } else setType(type.concat(value))\n  }\n\n  const handleDrink = (value) => {\n    if (drinks.includes(value)) {\n      setDrinks(drinks.filter((d) => d !== value))\n    } else setDrinks(drinks.concat(value))\n  }\n\n  const reset = () => {\n    setButton('all')\n    setPeriod(null)\n    setType([])\n    setDrinks([])\n  }\n\n  const buttonStyle = { backgroundColor: 'black', color: 'whitesmoke' }\n\n  return (\n    <>\n      <div className={dateClass}>\n        <button\n          style={button === 'all' ? buttonStyle : null}\n          className={'filter-button ' + buttonClass}\n          value={null}\n          onClick={({ target }) => {\n            setButton('all')\n            setPeriod(target.value)\n          }}\n        >\n          ALL\n        </button>\n        <button\n          style={button === 'today' ? buttonStyle : null}\n          className={'filter-button ' + buttonClass}\n          onClick={() => today()}\n        >\n          Today\n        </button>\n        <button\n          className={'filter-button ' + buttonClass}\n          style={button === 'week' ? buttonStyle : null}\n          onClick={() => {\n            week()\n          }}\n        >\n          This Week\n        </button>\n      </div>\n      <div className={checkBoxClass}>\n        <label>\n          <input\n            type=\"checkbox\"\n            value=\"Bar\"\n            checked={type.includes('Bar')}\n            onChange={() => handleType('Bar')}\n          />\n          Bar\n        </label>\n        <label>\n          <input\n            type=\"checkbox\"\n            value=\"BYOB\"\n            checked={type.includes('BYOB')}\n            onChange={() => handleType('BYOB')}\n          />\n          BYOB\n        </label>\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={type.includes('Club')}\n            value=\"Club\"\n            onChange={() => handleType('Club')}\n          />\n          Club\n        </label>\n      </div>\n      <div className={drinksClass}>\n        {drinksArr.map((d) => (\n          <label key={d}>\n            <input\n              type=\"checkbox\"\n              value={d}\n              checked={drinks.includes(d)}\n              onChange={({ target }) => handleDrink(target.value)}\n            ></input>\n            {d}\n          </label>\n        ))}\n      </div>\n\n      <button\n        className={'filter-button ' + buttonClass}\n        onClick={() => reset()}\n      >\n        Reset\n      </button>\n    </>\n  )\n}\n\nexport default Filter\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport Notification from './Notification'\nimport Filter from './Filter'\n\nconst Navbar = ({\n  login,\n  signOut,\n  token,\n  notification,\n  sortName,\n  setSortName,\n  type,\n  setType,\n  period,\n  setPeriod,\n  drinksArr,\n  drinks,\n  setDrinks,\n  showForm,\n  setShowForm,\n}) => {\n  const [expand, setExpand] = useState(false)\n  const [showFilter, setShowFilter] = useState(false)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const signIn = (event) => {\n    event.stopPropagation()\n    if (!showForm) {\n      setShowForm(true)\n    } else if (username && password) {\n      login({ variables: { username, password } })\n\n      setShowForm(false)\n      setUsername('')\n      setPassword('')\n    } else {\n      setShowForm(false)\n    }\n  }\n\n  const handleSort = () => {\n    const copy = sortName.concat()\n    copy.push(copy.shift())\n    setSortName(copy)\n  }\n  if (notification) {\n    return <Notification notification={notification} />\n  }\n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbar-container\">\n        <div onClick={() => setShowForm(false)}>\n          <Link to=\"/events\">\n            <strong>DrANK</strong>\n          </Link>\n        </div>\n        {!token && (\n          <nav>\n            <ul>\n              <li onClick={signIn}>Sign In</li>\n              <Link to=\"/register\">\n                <li onClick={() => setShowForm(false)}> Sign Up</li>\n              </Link>\n            </ul>\n          </nav>\n        )}\n        {token && (\n          <nav>\n            <ul className=\"nav-events-wrapper\">\n              <Link to=\"/events\">\n                <li>Events</li>\n              </Link>\n              <Link to=\"/myevents\">\n                <li>My Events</li>\n              </Link>\n              <Link to=\"/createevent\">\n                <li>Create Event</li>\n              </Link>\n              <li onClick={() => handleSort()}>{sortName[0]}</li>\n            </ul>\n          </nav>\n        )}\n        {token && (\n          <nav>\n            <ul>\n              <li onClick={signOut}>Sign Out</li>\n            </ul>\n          </nav>\n        )}\n      </div>\n\n      {showForm && (\n        <form className={showForm ? 'login-form' : null}>\n          <div>\n            <input\n              value={username}\n              placeholder=\"username\"\n              onChange={({ target }) => setUsername(target.value)}\n            ></input>\n          </div>\n          <div>\n            <input\n              value={password}\n              placeholder=\"password\"\n              onChange={({ target }) => setPassword(target.value)}\n              type=\"password\"\n            ></input>\n          </div>\n        </form>\n      )}\n      <div className=\"navbar-collapsed navbar-collapsed-main\">\n        <div onClick={() => setShowForm(false)}>\n          <Link to=\"/events\">\n            <strong>DrANK</strong>\n          </Link>\n        </div>\n        {!token && (\n          <nav>\n            <ul>\n              <li onClick={signIn}>Sign In</li>\n              <Link to=\"/register\">\n                <li onClick={() => setShowForm(false)}> Sign Up</li>\n              </Link>\n            </ul>\n          </nav>\n        )}\n        {token && (\n          <nav\n            onClick={() => {\n              setShowFilter(false)\n              setExpand(!expand)\n            }}\n          >\n            EXPAND\n          </nav>\n        )}\n      </div>\n      {expand && (\n        <ul\n          className={expand ? 'navbar-collapsed nav-collapsed-wrapper' : null}\n        >\n          <Link to=\"/events\">\n            <li>Events</li>\n          </Link>\n          <Link to=\"/myevents\">\n            <li>My Events</li>\n          </Link>\n          <Link to=\"/createevent\">\n            <li>Create Event</li>\n          </Link>\n          <li onClick={() => handleSort()}>{sortName[0]}</li>\n          <Link to=\"/profile\">\n            <li>Profile</li>\n          </Link>\n          <li onClick={() => setShowFilter(!showFilter)}>Filter</li>\n          <li onClick={signOut}>Sign Out</li>\n        </ul>\n      )}\n      {showFilter && (\n        <div\n          className={\n            showFilter ? 'navbar-collapsed nav-collapsed-filter' : null\n          }\n        >\n          <Filter\n            type={type}\n            setType={setType}\n            period={period}\n            setPeriod={setPeriod}\n            drinksArr={drinksArr}\n            drinks={drinks}\n            setDrinks={setDrinks}\n            buttonClass=\"collapsed-filter-button\"\n            dateClass=\"collapsed-filter-dates\"\n            checkBoxClass=\"collapsed-filter-checkboxes\"\n            drinksClass=\"collapsed-filter-drinks\"\n          />\n          <button\n            className=\"collapsed-filter-button\"\n            onClick={() => setShowFilter(false)}\n          >\n            Done\n          </button>\n        </div>\n      )}\n    </nav>\n  )\n}\n\nexport default Navbar\n","import { InMemoryCache, makeVar } from '@apollo/client'\n\nexport const cache = new InMemoryCache({\n  typePolicies: {\n    Event: {\n      fields: {\n        attendees: {\n          merge: false,\n        },\n      },\n    },\n    Query: {\n      fields: {\n        isLoggedIn: {\n          read() {\n            return isLoggedInVar()\n          },\n        },\n        eventsArr: {\n          read() {\n            return eventsArrVar()\n          },\n        },\n        eventsArrFilter: {\n          read() {\n            return eventsArrFilterVar()\n          },\n        },\n        userData: {\n          read() {\n            return userDataVar()\n          },\n        },\n        type: {\n          read() {\n            return typeDataVar()\n          },\n        },\n      },\n    },\n  },\n})\n\nexport const isLoggedInVar = makeVar(!!localStorage.getItem('user-token'))\n\nexport const eventsArrVar = makeVar([])\nexport const eventsArrFilterVar = makeVar([])\n\nexport const userDataVar = makeVar({})\n\nexport const typeDataVar = makeVar([])\n","import React, { useState } from 'react'\nimport { eventsArrVar, userDataVar } from '../cache'\n\nconst CreateEvent = ({ addEvent, history }) => {\n  const [eventName, setEventName] = useState('')\n  const [eventType, setEventType] = useState('BYOB')\n  const [eventPic, setEventPic] = useState(undefined)\n  const [location, setLocation] = useState('')\n  const [description, setDescription] = useState('')\n  const [eventDate, setEventDate] = useState('')\n  const [max, setMax] = useState(false)\n  const [maxGuests, setMaxGuests] = useState(0) //problem with this in console\n\n  const handleEvent = (event) => {\n    event.preventDefault()\n    const inputDate = eventDate === '' ? new Date() : eventDate\n    const newEvent = {\n      title: eventName,\n      eventType,\n      eventPic,\n      location,\n      description,\n      eventDate: inputDate,\n      max,\n      maxGuests,\n    }\n    addEvent({\n      variables: newEvent,\n    })\n\n    eventsArrVar([\n      ...eventsArrVar(),\n      {\n        ...newEvent,\n        host: userDataVar(),\n        attendees: [],\n        id: Math.random(),\n        eventPic: !newEvent.eventPic\n          ? 'https://images.unsplash.com/photo-1528495612343-9ca9f4a4de28?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTJ8fHBhcnR5fGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'\n          : newEvent.eventPic,\n      },\n    ]) // adding to local state\n\n    setEventName('')\n    setEventType('')\n    setEventPic('')\n    setLocation('')\n    setDescription('')\n    setEventDate('')\n    setMaxGuests(0)\n    history.push('/events')\n  }\n\n  return (\n    <div className=\"create-event-container\">\n      <form onSubmit={handleEvent} className=\"event-form\">\n        <div className=\"radio-buttons\">\n          <label>\n            BYOB\n            <input\n              value=\"BYOB\"\n              type=\"radio\"\n              name=\"event type\"\n              onChange={({ target }) => setEventType(target.value)}\n            ></input>\n          </label>\n          <label>\n            Bar\n            <input\n              value=\"Bar\"\n              type=\"radio\"\n              name=\"event type\"\n              onChange={({ target }) => setEventType(target.value)}\n            ></input>\n          </label>\n          <label>\n            Club\n            <input\n              value=\"Club\"\n              type=\"radio\"\n              name=\"event type\"\n              onChange={({ target }) => setEventType(target.value)}\n            ></input>\n          </label>\n        </div>\n        <input\n          value={eventName}\n          placeholder=\"Title\"\n          onChange={({ target }) => setEventName(target.value)}\n        ></input>\n        <input\n          value={eventPic}\n          placeholder=\"Pic\"\n          onChange={({ target }) => setEventPic(target.value)}\n        ></input>\n        <input\n          value={location}\n          placeholder=\"Location\"\n          onChange={({ target }) => setLocation(target.value)}\n        ></input>\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <label>\n            Max?\n            <input\n              type=\"checkbox\"\n              checked={max}\n              onChange={({ target }) => setMax(target.checked)}\n            ></input>\n          </label>\n          <input\n            style={max ? { display: true } : { display: 'none' }}\n            value={maxGuests}\n            type=\"number\"\n            min=\"0\"\n            onChange={({ target }) => setMaxGuests(parseInt(target.value))}\n          ></input>\n        </div>\n        <input\n          value={eventDate}\n          type=\"datetime-local\"\n          onChange={({ target }) => setEventDate(target.value)}\n        ></input>\n        <textarea\n          value={description}\n          placeholder=\"How's it going to be?\"\n          onChange={({ target }) => setDescription(target.value)}\n        ></textarea>\n        <button\n          className=\"button\"\n          style={{ alignSelf: 'center' }}\n          type=\"submit\"\n        >\n          add Event\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default CreateEvent\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Landing = ({ setShowForm, showForm }) => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <h1>\n        &#x1F942; Welcome to <strong>DrANK</strong> &#x1F37A;\n      </h1>\n      <Link to=\"register\">\n        <button className=\"button filter-button\"> Sign Up </button>\n      </Link>\n      <br />\n      <p id=\"already-drank\" onClick={() => setShowForm(!showForm)}>\n        already dRank?\n      </p>\n    </div>\n  )\n}\n\nexport default Landing\n","import React from 'react'\nimport { USER_INFO } from '../queries'\nimport { useQuery } from '@apollo/client'\n\nconst Profile = () => {\n  const { loading, error, data } = useQuery(USER_INFO, {\n    update: (store, response) => {\n      try {\n        const dataInStore = store.readQuery({ query: USER_INFO })\n        store.writeQuery({\n          query: USER_INFO,\n          data: {\n            ...dataInStore,\n            me: [...dataInStore, response.data.me],\n          },\n        })\n      } catch (err) {\n        throw new Error('trouble in Profile component w/ User Data query')\n      }\n    },\n  })\n  if (loading) {\n    return <div>LOADING</div>\n  }\n  if (error) {\n    return <div>ERROR: {error.message}</div>\n  }\n  if (!data.me) {\n    return <div>NO DATA</div>\n  }\n\n  return (\n    <div className=\"profile\">\n      <h3>{data.me.username}</h3>\n      <img src={data.me.pic} alt=\"profile pic\" className=\"profile-pic\"></img>\n      <div>{data.me.drink}</div>\n    </div>\n  ) // insert ?s before the dots to allow for the code to proceed if nothing is found\n}\n\nexport default Profile\n","import React, { useState, useEffect } from 'react'\n\nconst Register = ({ createUser, history, createResult }) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [pic, setPic] = useState('')\n  const [drink, setDrink] = useState('')\n\n  useEffect(() => {\n    setUsername('')\n    setPassword('')\n    setPassword('')\n    setPassword('')\n  }, [])\n\n  const signUp = async (event) => {\n    event.preventDefault()\n    createUser({ variables: { username, password, pic, drink } })\n  }\n\n  return (\n    <div className=\"create-event-container\">\n      <form className=\"registration-form\" onSubmit={signUp}>\n        <input\n          value={username}\n          placeholder=\"username\"\n          required\n          onChange={({ target }) => setUsername(target.value)}\n        ></input>\n        <input\n          value={password}\n          placeholder=\"password\"\n          onChange={({ target }) => setPassword(target.value)}\n          required\n          type=\"password\"\n        ></input>\n\n        <input\n          value={pic}\n          placeholder=\"profile pic\"\n          onChange={({ target }) => setPic(target.value)}\n        ></input>\n        <input\n          value={drink}\n          placeholder=\"drink of choice\"\n          required\n          onChange={({ target }) => setDrink(target.value)}\n        ></input>\n        <button className=\"button register-button\" type=\"submit\">\n          Register\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default Register\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst MyEvent = ({ event, token, userInfo }) => {\n  const date = new Date(event.eventDate)\n  const t = new Date()\n  const today = new Date(t.getFullYear(), t.getMonth(), t.getDate())\n  const active = date >= today\n\n  return (\n    <div>\n      <div className=\"event-info-top\">\n        <Link to={`/events/${event.id}`}>\n          <p style={{ fontSize: '100px' }}>{event.title}</p>\n        </Link>\n        {/* <img src={userInfo.pic} alt=\"host\" className=\"event-host-pic\"></img> */}\n      </div>\n      <img src={event.eventPic} alt=\"event\" className=\"event-pic\"></img>\n      <div className=\"event-info-bottom\">\n        <div>{event.eventType}</div>\n        <div>{event.location}</div>\n        <div>\n          <div>{date.toLocaleDateString()}</div>\n          <div style={{ textAlign: 'center' }}>\n            {date.toLocaleTimeString().slice(0, 5)}\n          </div>\n        </div>\n      </div>\n      {active && (\n        <Link to={`/editevent/${event.id}`}>\n          <button className=\"edit-button button\">EDIT</button>\n        </Link>\n      )}\n    </div>\n  )\n}\n\nexport default MyEvent\n","import React from 'react'\n\nimport MyEvent from './MyEvent'\nimport { useQuery } from '@apollo/client'\nimport { USER_INFO } from '../queries'\n\nconst MyEvents = ({ token }) => {\n  const { data, loading, error } = useQuery(USER_INFO)\n\n  if (loading) {\n    return <div>LOADING</div>\n  }\n\n  if (error) {\n    return <div>ERROR: {error}</div>\n  }\n  const userInfo = data.me\n\n  return (\n    <div>\n      <ul className=\"events-container\">\n        {userInfo.myEvents?.map((event) => {\n          return (\n            <li className=\"event\" key={`myevent ${event.id}`}>\n              <MyEvent event={event} token={token} userInfo={userInfo} />\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n  )\n}\n\nexport default MyEvents\n","import React, { useState } from 'react'\nimport { useQuery, useMutation } from '@apollo/client'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { ALL_EVENTS, EDIT_EVENT, FIND_EVENT, DELETE_EVENT } from '../queries'\n\nimport { cache, eventsArrVar } from '../cache'\n\nconst EditEvent = ({ token, setNotify }) => {\n  const history = useHistory()\n\n  const id = useParams().id\n\n  const { loading, error, data } = useQuery(FIND_EVENT, {\n    variables: { eventId: id },\n    fetchPolicy: 'network-only',\n    onCompleted: () => {\n      setEventName(data.findEvent.title)\n      setEventPic(data.findEvent.eventPic)\n      setLocation(data.findEvent.location)\n      setEventType(data.findEvent.eventType)\n      setDescription(data.findEvent.description)\n      setMax(data.findEvent.max)\n      const date = data.findEvent.eventDate\n      setEventDate(\n        `${date.slice(0, 4)}-${date.slice(5, 7)}-${date.slice(\n          8,\n          10\n        )}T${new Date(date).toLocaleTimeString().slice(0, 5)}`\n      )\n\n      setMaxGuests(data.findEvent.maxGuests)\n    },\n  })\n\n  const [editEvent] = useMutation(EDIT_EVENT, {\n    onError: (err) => {\n      setNotify(err.message)\n    },\n    refetchQueries: [{ query: ALL_EVENTS }],\n  })\n\n  const [deleteEvent] = useMutation(DELETE_EVENT)\n\n  const [eventName, setEventName] = useState('')\n  const [eventType, setEventType] = useState('')\n  const [eventPic, setEventPic] = useState('')\n  const [location, setLocation] = useState('')\n  const [description, setDescription] = useState('')\n  const [eventDate, setEventDate] = useState('')\n  const [max, setMax] = useState('')\n  const [maxGuests, setMaxGuests] = useState(0) //problem with this in console\n\n  const handleEvent = (event) => {\n    event.preventDefault()\n\n    editEvent({\n      variables: {\n        title: eventName,\n        eventType,\n        eventPic,\n        location,\n        description,\n        eventDate,\n        max,\n        maxGuests,\n        eventId: id,\n      },\n    })\n    setEventName('')\n    setEventType('')\n    setEventPic('')\n    setLocation('')\n    setDescription('')\n    setEventDate('')\n    setMax('')\n    setMaxGuests(0)\n    history.push('/events')\n  }\n\n  const handleDelete = (id) => {\n    deleteEvent({ variables: { eventId: id } })\n    cache.evict({ id: `Event:${id}` }) //this is the CacheId\n    cache.gc()\n    eventsArrVar([...eventsArrVar()].filter((e) => e.id !== id))\n    history.push('/events')\n  }\n  if (loading) return <div>LOADING</div>\n\n  if (error) return <div>{error}</div>\n\n  const event = data.findEvent\n  return (\n    <div className=\"edit-event-container\">\n      <div>\n        <form onSubmit={handleEvent} className=\"event-form\">\n          <div className=\"radio-buttons\">\n            <label>\n              BYOB\n              <input\n                value=\"BYOB\"\n                type=\"radio\"\n                name=\"event type\"\n                checked={eventType === 'BYOB'}\n                onChange={({ target }) => setEventType(target.value)}\n              ></input>\n            </label>\n            <label>\n              Bar\n              <input\n                value=\"Bar\"\n                type=\"radio\"\n                name=\"event type\"\n                checked={eventType === 'Bar'}\n                onChange={({ target }) => setEventType(target.value)}\n              ></input>\n            </label>\n            <label>\n              Club\n              <input\n                value=\"Club\"\n                type=\"radio\"\n                name=\"event type\"\n                checked={eventType === 'Club'}\n                onChange={({ target }) => setEventType(target.value)}\n              ></input>\n            </label>\n          </div>\n          <input\n            value={eventName}\n            placeholder=\"Title\"\n            onChange={({ target }) => setEventName(target.value)}\n          ></input>\n          <input\n            value={eventPic}\n            placeholder=\"Pic\"\n            onChange={({ target }) => setEventPic(target.value)}\n          ></input>\n          <input\n            value={location}\n            placeholder=\"Location\"\n            onChange={({ target }) => setLocation(target.value)}\n          ></input>\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <label>\n              Max?\n              <input\n                type=\"checkbox\"\n                checked={max}\n                onChange={({ target }) => setMax(target.checked)}\n              ></input>\n            </label>\n            <input\n              style={max ? { display: 'inline-block' } : { display: 'none' }}\n              value={maxGuests}\n              type=\"number\"\n              min=\"0\" //problmes here need to fx\n              placeholder=\"no limit\"\n              onChange={({ target }) => {\n                setMaxGuests(parseInt(target.value))\n              }} //changing to an Integer from String\n            ></input>\n          </div>\n          <input\n            value={eventDate}\n            type=\"datetime-local\"\n            onChange={({ target }) => setEventDate(target.value)}\n          ></input>\n          <textarea\n            value={description}\n            placeholder=\"How's it going to be?\"\n            onChange={({ target }) => setDescription(target.value)}\n          ></textarea>\n          <button\n            type=\"submit\"\n            className=\"button\"\n            style={{ alignSelf: 'center' }}\n          >\n            Edit Event\n          </button>\n        </form>\n        <button\n          className=\"button leave-button\"\n          style={{ alignSelf: 'center' }}\n          onClick={() => handleDelete(id)}\n        >\n          DELETE\n        </button>\n      </div>\n      <img src={event.eventPic} className=\"event-pic\" alt=\"event\"></img>\n    </div>\n  )\n}\n\nexport default EditEvent\n","import React, { useState } from 'react'\nimport { useMutation } from '@apollo/client'\nimport { CREATE_COMMENT, FIND_EVENT } from '../queries'\n\nconst Comments = ({ setNotify, event, going }) => {\n  const [comment, setComment] = useState('')\n\n  const [createComment] = useMutation(CREATE_COMMENT, {\n    update: (store, response) => {\n      const dataInStore = store.readQuery({\n        query: FIND_EVENT,\n        variables: { eventId: event.id },\n      })\n      store.writeQuery({\n        query: FIND_EVENT,\n        variables: { eventId: event.id },\n        data: {\n          ...dataInStore,\n          findEvent: {\n            ...dataInStore.findEvent,\n            comments: [\n              ...dataInStore.findEvent.comments,\n              response.data.createComment,\n            ],\n          },\n        },\n      })\n    },\n  })\n\n  const handleEvent = () => {\n    if (comment.length > 0) {\n      createComment({ variables: { comment, eventId: event.id } })\n      setComment('')\n    }\n  }\n\n  const comments = event.comments\n\n  return (\n    <div>\n      {going && (\n        <div className=\"comment-form\">\n          <input\n            value={comment}\n            placeholder=\"comments\"\n            onChange={({ target }) => setComment(target.value)}\n          ></input>\n          <button onClick={() => handleEvent()}>+</button>\n        </div>\n      )}\n      {comments.length > 0 && (\n        <ul>\n          {comments.map((c) => (\n            <li key={c.id} className=\"comment\" id={c.id}>\n              <img\n                className=\"comment-pic\"\n                alt=\"comment-pic\"\n                src={c.author.pic}\n              />\n              <p>{c.comment}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Comments\n","import React from 'react'\nimport { useQuery } from '@apollo/client'\nimport { useParams } from 'react-router-dom'\nimport BigButton from './BigButton'\nimport Comments from './Comments'\nimport { FIND_EVENT, USER_INFO } from '../queries'\n\nconst EventShow = ({ token, setNotify }) => {\n  const id = useParams().id\n\n  const eventInfo = useQuery(FIND_EVENT, {\n    variables: { eventId: id },\n  })\n  const userInfo = useQuery(USER_INFO)\n\n  if (eventInfo.loading || userInfo.loading) return <div>LOADING</div>\n\n  if (eventInfo.error || userInfo.error)\n    return (\n      <div>\n        ERROR{' '}\n        {eventInfo.error ? eventInfo.error.message : userInfo.error.message}\n      </div>\n    )\n\n  const event = eventInfo.data.findEvent\n  const user = userInfo.data.me\n\n  const going = !event.attendees.every((person) => person?.id !== user?.id)\n\n  const date = new Date(event.eventDate)\n\n  const descCont = { display: 'flex', justifyContent: 'center' }\n  const showContainer = { display: 'flex', justifyContent: 'center' }\n\n  return (\n    <div style={showContainer}>\n      <div className=\"event\">\n        <div className=\"event-info-top\">\n          <p style={{ fontSize: '100px' }}>{event.title}</p>\n        </div>\n        <img src={event.eventPic} alt=\"event\" className=\"event-pic\"></img>\n        <div className=\"event-info-bottom\">\n          <div>{event.eventType}</div>\n          <div>{event.location}</div>\n          <div>\n            <div>{date.toLocaleDateString()}</div>\n            <div style={{ textAlign: 'center' }}>\n              {date.toLocaleTimeString().slice(0, 5)}\n            </div>\n          </div>\n        </div>\n        <div style={descCont}>\n          <div className=\"event-description\">{event.description}</div>\n        </div>\n        <BigButton\n          event={event}\n          user={user}\n          setNotify={setNotify}\n          going={going}\n        />\n        <Comments going={going} event={event} />\n      </div>\n    </div>\n  )\n}\n\nexport default EventShow\n","import React, { useState } from 'react'\nimport { useQuery } from '@apollo/client'\nimport { useParams } from 'react-router-dom'\nimport { FIND_EVENT } from '../queries'\n\nconst Attendees = () => {\n  const id = useParams().id\n\n  const [showProfile, setShowProfile] = useState(null)\n\n  const eventInfo = useQuery(FIND_EVENT, {\n    variables: { eventId: id },\n  })\n  if (eventInfo.loading) return <div>LOADING</div>\n\n  if (eventInfo.error) return <div>ERROR</div> //make this better\n\n  const event = eventInfo.data.findEvent\n\n  if (!showProfile) {\n    return (\n      <div>\n        <div className=\"attendees-container\">\n          People Going {event.max && <div>(max {event.maxGuests})</div>}\n          <ul>\n            {event.attendees.map((person) => (\n              <li key={person.id}>\n                <img\n                  onClick={() => setShowProfile(person)}\n                  src={person.pic}\n                  alt={person.username}\n                  className=\"attendee-pic\"\n                ></img>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"profile\">\n      <h3>{showProfile.username}</h3>\n      <img\n        src={showProfile.pic}\n        alt=\"profile pic\"\n        className=\"profile-pic\"\n      ></img>\n      <div>{showProfile.drink}</div>\n      <button\n        className=\"button filter-button\"\n        onClick={() => setShowProfile(null)}\n      >\n        back\n      </button>\n    </div>\n  )\n}\n\nexport default Attendees\n","import React from 'react'\nimport { FIND_EVENT, USER_INFO } from '../queries'\nimport { useQuery } from '@apollo/client'\nimport { useParams } from 'react-router'\n\nconst Host = () => {\n  const id = useParams().id\n  const eventInfo = useQuery(FIND_EVENT, {\n    variables: { eventId: id },\n  })\n  const userInfo = useQuery(USER_INFO)\n\n  if (eventInfo.loading || userInfo.loading) {\n    return <div>LOADING</div>\n  }\n  if (eventInfo.loading || userInfo.loading) {\n    return <div>ERROR</div>\n  }\n\n  const { host } = eventInfo.data.findEvent\n\n  return (\n    <div className=\"profile\">\n      <div>\n        {host.id === userInfo.data.me.id ? \"You're hosting!\" : 'hosted by:'}\n      </div>\n      <h3>{host.username}</h3>\n      <img src={host.pic} alt=\"profile pic\" className=\"profile-pic\"></img>\n      <div>{host.drink}</div>\n    </div>\n  )\n}\n\nexport default Host\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst NoMatch = () => {\n  const noMatch = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  }\n  return (\n    <div style={noMatch}>\n      <h3>Not sure what you're looking for...</h3>\n      <h4>but it ain't here</h4>\n      <Link to=\"/events\">\n        <button className=\"button filter-button\">EXIT</button>\n      </Link>\n    </div>\n  )\n}\n\nexport default NoMatch\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst PrivateRoute = ({ children, token, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={() => (token ? children : <Redirect to=\"/register\" />)}\n    />\n  )\n}\nexport default PrivateRoute\n","export const filter = (e, type, period, drinks, exp) => {\n  //TYPE OF LOCATION FOR EVENT\n  const eventsCopy1 = !type.length\n    ? e\n    : e.filter((event) => type.includes(event.eventType))\n\n  let d = new Date()\n  const todaysDate = new Date(d.getFullYear(), d.getMonth(), d.getDate())\n\n  //TIME PERIOD - TODAY OR THIS WEEK\n  const eventsCopy2 = !period\n    ? eventsCopy1\n    : eventsCopy1\n        .filter((event) => new Date(event.eventDate) >= todaysDate)\n        .filter((event) => new Date(period) - new Date(event.eventDate) >= 0)\n  //TYPE OF DRINK\n  let eventsCopy3 = !drinks.length\n    ? eventsCopy2\n    : eventsCopy2.filter((event) => drinks.includes(event.host.drink))\n\n  let arr = [...eventsCopy3]\n\n  return sort(arr, exp)\n}\n\nconst sort = (arr, exp) => {\n  switch (exp) {\n    case 'Later':\n      arr.sort((a, b) => new Date(b.eventDate) - new Date(a.eventDate))\n      break\n    case 'Sooner':\n      arr.sort((a, b) => new Date(a.eventDate) - new Date(b.eventDate))\n      break\n    case 'Old':\n      arr.sort((a, b) => new Date(a.createdAt) - new Date(b.createdAt))\n      break\n    case 'New':\n      arr.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))\n      break\n    default:\n      arr.sort((a, b) => new Date(b.eventDate) - new Date(a.eventDate))\n  }\n  return arr\n}\n","import React, { useState, useEffect } from 'react'\nimport { Switch, Route, useHistory, Redirect } from 'react-router-dom'\n\nimport './App.css'\nimport Events from './components/Events'\nimport Navbar from './components/Navbar'\nimport CreateEvent from './components/CreateEvent'\nimport Landing from './components/Landing'\nimport Profile from './components/Profile'\nimport Register from './components/Register'\nimport MyEvents from './components/MyEvents'\nimport EditEvent from './components/EditEvent'\nimport EventShow from './components/EventShow'\nimport Attendees from './components/Attendees'\nimport Host from './components/Host'\nimport Filter from './components/Filter'\nimport NoMatch from './components/NoMatch'\nimport PrivateRoute from './components/PrivateRoute'\n\nimport { useMutation, useApolloClient, useQuery } from '@apollo/client'\nimport { CREATE_USER, LOGIN, ADD_EVENT, ALL_EVENTS, USER_INFO } from './queries'\n\nimport { isLoggedInVar, userDataVar } from './cache'\n\nimport { filter } from './filter'\n\nfunction App() {\n  //QUERIES\n\n  const events = useQuery(ALL_EVENTS, {\n    onCompleted: ({ allEvents }) => {},\n  })\n  const userInfo = useQuery(USER_INFO, {\n    onCompleted: ({ me }) => {\n      userDataVar(me) //set local state w/ user info\n    },\n  })\n\n  const client = useApolloClient()\n  const history = useHistory()\n\n  //STATE\n  const [token, setToken] = useState(null)\n  const [showForm, setShowForm] = useState(false)\n  const [notification, setNotification] = useState(null)\n  const [type, setType] = useState([])\n  const [period, setPeriod] = useState(null)\n  const [timeoutId, setTimeoutId] = useState(null)\n  const [drinks, setDrinks] = useState([])\n  const [sortName, setSortName] = useState([\n    'Sort',\n    'New',\n    'Old',\n    'Sooner',\n    'Later',\n  ])\n\n  const setNotify = (message, type = 'navbar-error') => {\n    clearTimeout(timeoutId)\n    setNotification({ message, type })\n    const timer = setTimeout(() => setNotification(null), 2500)\n    setTimeoutId(timer)\n  }\n  ///////////////////\n  ///  MUTATIONS  ///\n  ///////////////////\n  const [createUser, createResult] = useMutation(CREATE_USER, {\n    onCompleted: ({ createUser }) => {\n      localStorage.setItem('user-token', createUser.value)\n      setToken(createUser.value)\n      isLoggedInVar(true)\n      history.push('/events')\n      setNotify('Welcome to dRank!', 'navbar-success')\n      userInfo.refetch()\n      userDataVar(createUser.user) //set local state w/ user info\n    },\n    update: (store, response) => {\n      try {\n        const dataInStore = store.readQuery({ query: USER_INFO })\n        store.writeQuery({\n          query: USER_INFO,\n          data: { ...dataInStore, me: response.data.createUser.user },\n        })\n      } catch (err) {\n        throw new Error(\n          'error from App.js trying to write to Cache from createUser',\n          err.message\n        )\n      }\n    },\n    onError: (err) => {\n      setNotify(err.message)\n      console.log('error from createUser mutation in App.js', err)\n    },\n  })\n  const [login, loginResult] = useMutation(LOGIN, {\n    onCompleted({ login }) {\n      if (login) {\n        localStorage.setItem('user-token', login.value)\n\n        setToken(login.value)\n        isLoggedInVar(true)\n        history.push('/events')\n        setNotify(`Welcome ${login.user.username}!`, 'navbar-success')\n        console.log(login.user)\n        userDataVar(login.user) //set local state w/ user info\n      }\n    },\n    onError: (err) => {\n      setNotify(err.message)\n      console.log('error from LOGIN mutation in App.js', err)\n    },\n    update: (store, response) => {\n      try {\n        const dataInStore = store.readQuery({ query: USER_INFO })\n        store.writeQuery({\n          query: USER_INFO,\n          data: {\n            ...dataInStore,\n            me: response.data.login.user,\n          },\n        })\n      } catch (err) {\n        throw new Error(\n          'error from App.js trying to write to Cache from createUser',\n          err.message\n        )\n      }\n    },\n  })\n\n  const [addEvent] = useMutation(ADD_EVENT, {\n    refetchQueries: [{ query: ALL_EVENTS }],\n    onError: (error) => {\n      setNotify(error.message)\n      setTimeout(() => setNotification(null), 2000)\n      console.log(error)\n    },\n    onCompleted: ({ addEvent }) => {\n      setNotify(`${addEvent.title} is happening!`, 'navbar-success')\n    },\n    update: (store, res) => {\n      const dataInStore = store.readQuery({ query: USER_INFO })\n      store.writeQuery({\n        query: USER_INFO,\n        data: {\n          ...dataInStore,\n          me: {\n            ...dataInStore.me,\n            myEvents: [...dataInStore.me.myEvents, res.data.addEvent],\n          },\n        },\n      })\n    },\n  })\n\n  //checks for token of previous session\n  useEffect(() => {\n    const previousToken = localStorage.getItem('user-token')\n    if (previousToken) {\n      setToken(previousToken)\n    }\n  }, [])\n\n  // sets token after loggn n account\n  useEffect(() => {\n    if (loginResult.data) {\n      localStorage.setItem('user-token', loginResult.data.login.value) //not sure why can't use Token, but 'null' is inserted\n      setToken(loginResult.data.login.value)\n    }\n  }, [loginResult.data]) //eslint-disable-line\n\n  const signOut = async () => {\n    localStorage.clear()\n    setToken(null)\n    history.push('/')\n    await client.resetStore()\n    return isLoggedInVar(false)\n  }\n\n  if (events.error) return <div>ERROR </div>\n  if (events.loading || loginResult.loading) return <div>LOADING </div>\n\n  const drinksArr = events.data.allEvents.reduce((acc, cur) => {\n    if (acc.includes(cur.host.drink)) {\n      return acc\n    }\n    return acc.concat(cur.host.drink) //cannot use Push here, not sure why\n  }, [])\n\n  //FILTER\n\n  const eventsInfo = filter(\n    events.data.allEvents,\n    type,\n    period,\n    drinks,\n    sortName[0]\n  )\n  // eventsArrVar([...eventsInfo])\n\n  return (\n    <div>\n      <Navbar\n        login={login}\n        token={token}\n        signOut={signOut}\n        notification={notification}\n        sortName={sortName}\n        setSortName={setSortName}\n        type={type}\n        setType={setType}\n        period={period}\n        setPeriod={setPeriod}\n        drinksArr={drinksArr}\n        drinks={drinks}\n        setDrinks={setDrinks}\n        setShowForm={setShowForm}\n        showForm={showForm}\n      />\n      <div className=\"main-container\">\n        <div className=\"main\">\n          <Switch>\n            <PrivateRoute path=\"/createevent\" token={token}>\n              <CreateEvent\n                addEvent={addEvent}\n                history={history}\n                setNotify={setNotify}\n              />\n            </PrivateRoute>\n            <PrivateRoute path=\"/editevent/:id\" token={token}>\n              <EditEvent history={history} setNotify={setNotify} />\n            </PrivateRoute>\n\n            <PrivateRoute path=\"/myevents\" token={token}>\n              <MyEvents />\n            </PrivateRoute>\n            <PrivateRoute path=\"/events/:id\" token={token}>\n              <EventShow setNotify={setNotify} />\n            </PrivateRoute>\n            <Route path=\"/register\">\n              <Register\n                createUser={createUser}\n                createResult={createResult}\n                history={history}\n              />\n            </Route>\n            <Route path=\"/events\">\n              <Events events={eventsInfo} setNotify={setNotify} />\n            </Route>\n            <Route path=\"/index\">\n              <Landing setShowForm={setShowForm} showForm={showForm} />\n            </Route>\n            <Route path=\"/drinkAppFE\" exact>\n              <Redirect to=\"/index\" />\n            </Route>\n            <Route path=\"/\" exact>\n              <Redirect to=\"/index\" />\n            </Route>\n            <Route path=\"*\">\n              <NoMatch />\n            </Route>\n          </Switch>\n        </div>\n        <aside className=\"aside aside-1\">\n          {token && (\n            <Switch>\n              <Route path=\"/events/:id\">\n                <Attendees />\n              </Route>\n              <Route path=\"/events\">\n                <Filter\n                  type={type}\n                  setType={setType}\n                  period={period}\n                  setPeriod={setPeriod}\n                  drinksArr={drinksArr}\n                  drinks={drinks}\n                  setDrinks={setDrinks}\n                  buttonClass=\"button\"\n                  dateClass=\"filter-dates\"\n                  checkBoxClass=\"filter-checkboxes\"\n                  drinksClass=\"filter-drinks\"\n                />\n              </Route>\n            </Switch>\n          )}\n        </aside>\n        <aside className=\"aside aside-2\">\n          {token && (\n            <Switch>\n              <Route path=\"/events/:id\">\n                <Host />\n              </Route>\n              <Route path=\"/\">\n                <Profile />\n              </Route>\n            </Switch>\n          )}\n        </aside>\n      </div>\n      <footer className=\"footer\"></footer>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport {\n  ApolloClient,\n  ApolloProvider,\n  createHttpLink,\n  gql,\n} from '@apollo/client'\n\nimport { setContext } from '@apollo/client/link/context'\nimport { cache } from './cache'\nconst httpLink = createHttpLink({\n  uri: 'https://enigmatic-chamber-69253.herokuapp.com/',\n})\n\nexport const typeDefs = gql`\n  extend type Query {\n    isLoggedIn: Boolean!\n  }\n`\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('user-token')\n\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `bearer ${token}` : null,\n    },\n  }\n})\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: cache,\n  typeDefs,\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Router>\n      <App />\n    </Router>\n  </ApolloProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}